--// ===================================================
--//   AUTO AIM BASKETBALL SHOOTER (CLICK TO SHOOT)
--//   Holy Grail version + Debug Overlay
--//   Static rim dots, dynamic smart re-align, live X/Z feedback
--// ===================================================

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local Camera = workspace.CurrentCamera

local plr = Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local shootRemote = remotes:WaitForChild("Shoot")

local toggleOn, DotsEnabled = true, true
local shootKey, selectedRim = nil, nil

--// === Notify ===
local function notify(msg, color)
	local gui = Instance.new("ScreenGui", CoreGui)
	gui.ResetOnSpawn = false
	local label = Instance.new("TextLabel", gui)
	label.AnchorPoint = Vector2.new(0.5, 0.5)
	label.BackgroundTransparency = 1
	label.TextColor3 = color or Color3.new(1, 1, 1)
	label.Font = Enum.Font.Code
	label.TextSize = 26
	label.Text = msg
	label.Position = UDim2.new(0.5, 0, 0.9, 0)
	task.spawn(function() task.wait(1.5) gui:Destroy() end)
end

--// === Debug Overlay ===
local debugGui = Instance.new("ScreenGui")
debugGui.Name = "SmartOffsetOverlay"
debugGui.ResetOnSpawn = false
debugGui.Parent = CoreGui

local dbgLabel = Instance.new("TextLabel", debugGui)
dbgLabel.Size = UDim2.new(0, 300, 0, 50)
dbgLabel.Position = UDim2.new(0, 10, 1, -60)
dbgLabel.BackgroundTransparency = 1
dbgLabel.TextColor3 = Color3.fromRGB(255, 255, 200)
dbgLabel.Font = Enum.Font.Code
dbgLabel.TextSize = 18
dbgLabel.TextXAlignment = Enum.TextXAlignment.Left
dbgLabel.TextYAlignment = Enum.TextYAlignment.Top
dbgLabel.TextTransparency = 0.2
dbgLabel.Text = "Offset X: 0 | Z: 0"

local function updateDebugOverlay(x, z)
	dbgLabel.Text = string.format("Offset X: %.2f | Z: %.2f", x, z)
	dbgLabel.TextTransparency = (math.abs(x) + math.abs(z) < 0.05) and 0.5 or 0.2
end

--// === Rim ESP ===
local RimDots = {}
local RimSize = Vector3.new(3.632131576538086,0.5587897300720215,3.632131576538086)

local function addRimDot(rim)
	local dot = Drawing.new("Circle")
	dot.Radius, dot.Filled, dot.Color = 4, true, Color3.new(1,0,0)
	RimDots[rim] = dot
end
local function removeRimDot(rim)
	if RimDots[rim] then RimDots[rim]:Remove() RimDots[rim] = nil end
	if selectedRim == rim then selectedRim = nil end
end

RunService.RenderStepped:Connect(function()
	for rim,dot in pairs(RimDots) do
		if rim:IsDescendantOf(workspace) and DotsEnabled then
			local pos,on = Camera:WorldToViewportPoint(rim.Position)
			dot.Position, dot.Visible = Vector2.new(pos.X,pos.Y), on
			dot.Color = (rim==selectedRim) and Color3.new(1,1,0) or Color3.new(1,0,0)
			dot.Radius = (rim==selectedRim) and 6 or 4
		else dot.Visible=false end
	end
end)

workspace.DescendantAdded:Connect(function(o)
	if o:IsA("BasePart") and o.Name=="Rim" and o.Size==RimSize then addRimDot(o) end
end)
workspace.DescendantRemoving:Connect(removeRimDot)
for _,v in ipairs(workspace:GetDescendants()) do
	if v:IsA("BasePart") and v.Name=="Rim" and v.Size==RimSize then addRimDot(v) end
end

--// === Auto Rim Lock ===
task.spawn(function()
	while task.wait(0.1) do
		if not toggleOn then continue end
		local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
		if not root then continue end
		local bestRim,bestDist=nil,85
		for rim in pairs(RimDots) do
			if rim:IsDescendantOf(workspace) then
				local dist=(rim.Position-root.Position).Magnitude
				if dist<bestDist then
					local _,on=Camera:WorldToViewportPoint(rim.Position)
					if on then bestRim,bestDist=rim,dist end
				end
			end
		end
		if bestRim and bestRim~=selectedRim then
			selectedRim=bestRim
			notify("🎯 Auto-Locked Nearest Rim",Color3.fromRGB(255,230,0))
		end
	end
end)

--// === Toggles ===
UserInputService.InputBegan:Connect(function(i,gp)
	if gp then return end
	if i.KeyCode==Enum.KeyCode.O then
		DotsEnabled=not DotsEnabled
	elseif i.KeyCode==Enum.KeyCode.V then
		toggleOn=not toggleOn
		notify(toggleOn and "System ON" or "System OFF",
			toggleOn and Color3.new(0,1,0) or Color3.new(1,0,0))
	end
end)

--// === Capture Shoot Key ===
local old
old=hookmetamethod(game,"__namecall",function(self,...)
	local m=getnamecallmethod()
	if m=="FireServer" and self==shootRemote then
		local args={...}
		if type(args[3])=="string" and not shootKey then
			shootKey=args[3]
			print("[Captured ShootKey]:",shootKey)
			notify("Shoot key captured!",Color3.new(0,1,0))
		end
	end
	return old(self,...)
end)

--// === Smart Offset System ===
local moveOffset = Vector3.zero
local function computeSmartOffset()
	local hum = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")
	local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
	if not (hum and root) then return Vector3.zero end

	local moveDir = hum.MoveDirection
	local speed = hum.WalkSpeed * moveDir.Magnitude
	local strength = math.clamp(speed / 16, 0.5, 1.3)

	local dist = selectedRim and (root.Position - selectedRim.Position).Magnitude or 70
	local distFactor = math.clamp(dist / 90, 0.8, 1.2)

	local targetOffset = Vector3.new(moveDir.X * strength * distFactor, 0, moveDir.Z * strength * distFactor)
	moveOffset = moveOffset:Lerp(targetOffset, 0.25)

	updateDebugOverlay(moveOffset.X, moveOffset.Z)
	return moveOffset
end

--// === Arc + Aim ===
local function computeArc(dist)
	return Vector3.new(0, 43 + (dist / 15), 0)
end
local function smartAim(rim)
	local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
	if not root then return rim.Position end
	local dist = (root.Position - rim.Position).Magnitude
	return rim.Position + computeArc(dist) - computeSmartOffset()
end

--// === Shoot ===
local function shootAtTarget()
	if not (selectedRim and selectedRim:IsDescendantOf(workspace)) then
		return notify("❌ No Target",Color3.new(1,0.3,0.3))
	end
	if not shootKey then
		return notify("⚙️ Shoot Key Missing",Color3.new(1,0.8,0.3))
	end

	local char = plr.Character
	if not char then return end
	local head, root = char:FindFirstChild("Head"), char.PrimaryPart
	if not (head and root) then return end

	local aimPos = smartAim(selectedRim)
	local dir = (aimPos - head.Position).Unit
	local shootFrom = root.Position + dir * 3.8
	if shootFrom.Y - root.Position.Y < 4 then
		shootFrom = root.Position + dir * 4
	end

	shootRemote:FireServer(aimPos, shootFrom, shootKey)
	notify("🏀 Shot Fired!",Color3.new(0,1,0))
end

--// === Click to Shoot ===
UserInputService.InputBegan:Connect(function(i,gp)
	if gp or not toggleOn then return end
	if i.UserInputType==Enum.UserInputType.MouseButton1 then
		shootAtTarget()
	end
end)

print("[🏀 Auto Aim Basketball] Holy Grail + Debug Overlay loaded.")
print("[V] Toggle system | [O] Toggle dots")
